// TODO: auto-generate from schema yaml files; tricky though, because need to get rid of overlapping fields.
// pulled from schema on 12 June 2019
export abstract class SchemaDefs {
  static patientProperties: string[] = [
    "patientID",
    "alternateIdentifier",
    "gID",
    "sID",
    "contactGroupIdentifier",
    "sourceFiles",
    "cohort",
    "outcome",
    "country.name",
    "country.identifier",
    "homeLocation",
    "admittedLassaWard",
    "admitDate",
    "infectionDate",
    "infectionYear",
    "evalDate",
    "survivorEnrollmentDate",
    "survivorEvalDates",
    "dischargeDate",
    "daysOnset",
    "daysInHospital",
    "gender",
    "relatedTo",
    "relatedToPrivate",
    "exposureType",
    "contactSurvivorRelationship",
    "ethnicity",
    "age",
    "height",
    "weight",
    "pregnant",
    "LassaExposed",
    "LassaHHDeaths",
    "elisa",
    "rapidDiagostics",
    "rtpcr",
    "symptoms",
    "comaScore",
    "medications",
    "piccolo"
  ];

  static sampleProperties: string[] = [
    "sampleID",
    "sampleLabel",
    "visitCode",
    "isolationDate",
    "sampleGroup",
    "sampleType",
    "derivedIndex",
    "protocolVersion",
    "protocolURL",
    "freezingBuffer",
    "dilutionFactor",
    "AVLinactivated",
    "species",
    "location.lab",
    "sourceSampleID",
    "primarySampleDate",
    "location.numAliquots",
    "location.freezerID",
    "location.freezerRack",
    "location.freezerBox",
    "location.freezerBoxCell",
    "location.dateModified",
    "location.updatedBy"];



  static exptProperties: string[] = [
    "experimentID",
    "batchID",
    "SRA_ID",
    "GenBank_ID",
    "experimentDate",
    "measurementTechnique",
    "publisher.name",
    "publisher.alternateName",
    "publisher.description",
    "publisher.url",
    "publisher.email",
    "publisher.award",
    "publisher.parentOrganization",
    "publisher.logo",
    "publisher.contactPoint",
    "publisher.address",
    "publication",
    "citation.identifier",
    "citation.url",
    "citation.author",
    "citation.name",
    "citation.datePublished",
    "citation.pageStart",
    "citation.pageEnd",
    "citation.journalName",
    "citation.issueNumber",
    "citation.volumeNumber",
    // "data"
  ];
}
